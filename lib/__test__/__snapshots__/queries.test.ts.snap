// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createClusterQuery should create a clustered Query 1`] = `
Object {
  "sql": "

WITH
  filtered AS (
    SELECT
      public.stations.wkb_geometry,
      1 as theCount, a
    FROM public.stations
    WHERE
      ST_Intersects(TileBBox($1, $2, $3, 3857), ST_Transform(wkb_geometry, 3857)) AND status = status AND [1, 2] @> [2, 3]
  ),

  clustered_10 AS (
    SELECT
      wkb_geometry as center,
      theCount,
      ST_ClusterDBSCAN(wkb_geometry, 0.009765625, 1) over () AS clusters, a
    FROM filtered
  ),
  grouped_clusters_10 AS (
    SELECT
      FIRST(a) as a,
      SUM(theCount) AS theCount,
      ST_Centroid(ST_Collect(center)) AS center,
      clusters AS clusterNo,
      11 as expansionZoom
    FROM clustered_10
    GROUP BY clusters
  ),
  
  clustered_9 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.01953125, 1) over () as clusters, a
    FROM grouped_clusters_10
  ),
  grouped_clusters_9 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 10 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_9
    GROUP BY clusters
  ),

  clustered_8 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.0390625, 1) over () as clusters, a
    FROM grouped_clusters_9
  ),
  grouped_clusters_8 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 9 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_8
    GROUP BY clusters
  ),

  clustered_7 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.078125, 1) over () as clusters, a
    FROM grouped_clusters_8
  ),
  grouped_clusters_7 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 8 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_7
    GROUP BY clusters
  ),

  clustered_6 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.15625, 1) over () as clusters, a
    FROM grouped_clusters_7
  ),
  grouped_clusters_6 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 7 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_6
    GROUP BY clusters
  ),

  clustered_5 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.3125, 1) over () as clusters, a
    FROM grouped_clusters_6
  ),
  grouped_clusters_5 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 6 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_5
    GROUP BY clusters
  ),

  clustered_4 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 0.625, 1) over () as clusters, a
    FROM grouped_clusters_5
  ),
  grouped_clusters_4 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 5 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_4
    GROUP BY clusters
  ),

  clustered_3 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 1.25, 1) over () as clusters, a
    FROM grouped_clusters_4
  ),
  grouped_clusters_3 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 4 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_3
    GROUP BY clusters
  ),

  clustered_2 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 2.5, 1) over () as clusters, a
    FROM grouped_clusters_3
  ),
  grouped_clusters_2 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 3 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_2
    GROUP BY clusters
  ),

  clustered_1 AS (
    SELECT
      center,
      expansionZoom,
      theCount,
      clusterNo AS previousClusterNo,
      ST_ClusterDBSCAN(center, 5, 1) over () as clusters, a
    FROM grouped_clusters_2
  ),
  grouped_clusters_1 AS (
    SELECT
      FIRST(a) as a,
      clusters AS clusterNo,
      (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 2 END) as expansionZoom,
      SUM(theCount) as theCount,
      ST_Centroid(ST_Collect(center)) as center
    FROM clustered_1
    GROUP BY clusters
  ),


  tiled as (
    SELECT
      center,
      expansionZoom,
      theCount, a
    FROM grouped_clusters_1
    WHERE
      ST_Intersects(TileBBox($4, $5, $6, 3857), ST_Transform(center, 3857))
  ),
  q AS (
    SELECT
      1 as c1,
      ST_AsMVTGeom(ST_Transform(center, 3857), TileBBox($7, $8, $9, 3857), $10, 10, false) AS geom,
      jsonb_build_object('count', theCount, 'expansionZoom', expansionZoom, 'a', a) as attributes
    FROM tiled
  )
SELECT ST_AsMVT(q, $11, $12, 'geom') AS mvt
FROM q
",
  "type": "SLONIK_TOKEN_SQL",
  "values": Array [
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    0,
    1,
    512,
    "points",
    512,
  ],
}
`;

exports[`createClusterQuery should create a unclustered Query 1`] = `
Object {
  "sql": "
WITH 
  filtered AS (
    SELECT 
      public.stations.wkb_geometry, a
    FROM public.stations
    WHERE 
      ST_Intersects(TileBBox($1, $2, $3, 3857), ST_Transform(wkb_geometry, 3857))
  ),
  q AS (
    SELECT 
      1 AS c1,
      ST_AsMVTGeom(ST_Transform(wkb_geometry, 3857),
      TileBBox($4, $5, $6, 3857), $7, 10, false) AS geom, 
      jsonb_build_object('count', 1, 'expansionZoom', 10, 'a', a) AS attributes
    FROM filtered
  )
SELECT ST_AsMVT(q, $8, $9, 'geom') AS mvt
FROM q
",
  "type": "SLONIK_TOKEN_SQL",
  "values": Array [
    15,
    0,
    1,
    15,
    0,
    1,
    512,
    "points",
    512,
  ],
}
`;
