// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createClusterQuery should create a clustered Query 1`] = `
"
    
  with filtered as
    (SELECT public.stations.wkb_geometry, 1 as theCount , a
    FROM public.stations
    WHERE ST_Intersects(TileBBox($1, $2, $3, 3857), ST_Transform(wkb_geometry, 3857))
        AND status = status AND [1, 2] @> [2, 3]
    ),
    clustered_10 AS
    (SELECT wkb_geometry as center,
        theCount,
        ST_ClusterDBSCAN(wkb_geometry, 0.0146484375, 1) over () AS clusters
        , a
    FROM filtered),
    grouped_clusters_10 AS
    (SELECT SUM(theCount) AS theCount,
            clusters AS clusterNo,
            11 AS expansionZoom,
      FIRST(a) as a,
      ST_Centroid(ST_Collect(center)) AS center
    FROM clustered_10
    GROUP BY clusters),
    
    clustered_9 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.029296875, 1) over () as clusters , a
        FROM grouped_clusters_10),
    grouped_clusters_9 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 10 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_9
        GROUP BY clusters),

    clustered_8 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.05859375, 1) over () as clusters , a
        FROM grouped_clusters_9),
    grouped_clusters_8 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 9 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_8
        GROUP BY clusters),

    clustered_7 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.1171875, 1) over () as clusters , a
        FROM grouped_clusters_8),
    grouped_clusters_7 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 8 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_7
        GROUP BY clusters),

    clustered_6 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.234375, 1) over () as clusters , a
        FROM grouped_clusters_7),
    grouped_clusters_6 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 7 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_6
        GROUP BY clusters),

    clustered_5 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.46875, 1) over () as clusters , a
        FROM grouped_clusters_6),
    grouped_clusters_5 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 6 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_5
        GROUP BY clusters),

    clustered_4 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 0.9375, 1) over () as clusters , a
        FROM grouped_clusters_5),
    grouped_clusters_4 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 5 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_4
        GROUP BY clusters),

    clustered_3 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 1.875, 1) over () as clusters , a
        FROM grouped_clusters_4),
    grouped_clusters_3 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 4 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_3
        GROUP BY clusters),

    clustered_2 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 3.75, 1) over () as clusters , a
        FROM grouped_clusters_3),
    grouped_clusters_2 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 3 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_2
        GROUP BY clusters),

    clustered_1 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 7.5, 1) over () as clusters , a
        FROM grouped_clusters_2),
    grouped_clusters_1 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 2 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_1
        GROUP BY clusters),


     tiled as
    (SELECT center,
            expansionZoom,
            theCount , a
     FROM grouped_clusters_1
     WHERE ST_Intersects(TileBBox($4, $5, $6, 3857), ST_Transform(center, 3857))),
     q as
    (SELECT 1 as c1,
            ST_AsMVTGeom(ST_Transform(center, 3857), TileBBox($7, $8, $9, 3857), $10, $11, false) AS geom,
            jsonb_build_object('count', theCount, 'expansionZoom', expansionZoom,'lng', ST_X (ST_Transform(center, 4326)),'lat', ST_Y (ST_Transform(center, 4326)), 'a', a) as attributes
     FROM tiled)
SELECT ST_AsMVT(q, $12, $13, 'geom') as mvt
from q
"
`;

exports[`createClusterQuery should create a clustered Query 2`] = `
Array [
  1,
  0,
  1,
  1,
  0,
  1,
  1,
  0,
  1,
  4096,
  256,
  "points",
  4096,
]
`;

exports[`createClusterQuery should create a clustered Query with differentZoomToDistance 1`] = `
"
    
  with filtered as
    (SELECT public.stations.wkb_geometry, 1 as theCount , a
    FROM public.stations
    WHERE ST_Intersects(TileBBox($1, $2, $3, 3857), ST_Transform(wkb_geometry, 3857))
        AND status = status AND [1, 2] @> [2, 3]
    ),
    clustered_10 AS
    (SELECT wkb_geometry as center,
        theCount,
        ST_ClusterDBSCAN(wkb_geometry, 12, 1) over () AS clusters
        , a
    FROM filtered),
    grouped_clusters_10 AS
    (SELECT SUM(theCount) AS theCount,
            clusters AS clusterNo,
            11 AS expansionZoom,
      FIRST(a) as a,
      ST_Centroid(ST_Collect(center)) AS center
    FROM clustered_10
    GROUP BY clusters),
    
    clustered_9 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 11, 1) over () as clusters , a
        FROM grouped_clusters_10),
    grouped_clusters_9 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 10 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_9
        GROUP BY clusters),

    clustered_8 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 10, 1) over () as clusters , a
        FROM grouped_clusters_9),
    grouped_clusters_8 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 9 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_8
        GROUP BY clusters),

    clustered_7 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 9, 1) over () as clusters , a
        FROM grouped_clusters_8),
    grouped_clusters_7 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 8 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_7
        GROUP BY clusters),

    clustered_6 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 8, 1) over () as clusters , a
        FROM grouped_clusters_7),
    grouped_clusters_6 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 7 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_6
        GROUP BY clusters),

    clustered_5 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 7, 1) over () as clusters , a
        FROM grouped_clusters_6),
    grouped_clusters_5 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 6 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_5
        GROUP BY clusters),

    clustered_4 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 6, 1) over () as clusters , a
        FROM grouped_clusters_5),
    grouped_clusters_4 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 5 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_4
        GROUP BY clusters),

    clustered_3 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 5, 1) over () as clusters , a
        FROM grouped_clusters_4),
    grouped_clusters_3 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 4 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_3
        GROUP BY clusters),

    clustered_2 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 4, 1) over () as clusters , a
        FROM grouped_clusters_3),
    grouped_clusters_2 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 3 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_2
        GROUP BY clusters),

    clustered_1 AS
        (SELECT center,
            expansionZoom,
            clusterNo AS previousClusterNo,
            theCount,
            ST_ClusterDBSCAN(center, 3, 1) over () as clusters , a
        FROM grouped_clusters_2),
    grouped_clusters_1 AS
        (SELECT SUM(theCount) as theCount,
                clusters AS clusterNo,
                (CASE COUNT(previousClusterNo) WHEN 1 THEN FIRST(expansionZoom) ELSE 2 END) AS expansionZoom,
            FIRST(a) as a,
            ST_Centroid(ST_Collect(center)) as center
        FROM clustered_1
        GROUP BY clusters),


     tiled as
    (SELECT center,
            expansionZoom,
            theCount , a
     FROM grouped_clusters_1
     WHERE ST_Intersects(TileBBox($4, $5, $6, 3857), ST_Transform(center, 3857))),
     q as
    (SELECT 1 as c1,
            ST_AsMVTGeom(ST_Transform(center, 3857), TileBBox($7, $8, $9, 3857), $10, $11, false) AS geom,
            jsonb_build_object('count', theCount, 'expansionZoom', expansionZoom,'lng', ST_X (ST_Transform(center, 4326)),'lat', ST_Y (ST_Transform(center, 4326)), 'a', a) as attributes
     FROM tiled)
SELECT ST_AsMVT(q, $12, $13, 'geom') as mvt
from q
"
`;

exports[`createClusterQuery should create a clustered Query with differentZoomToDistance 2`] = `
Array [
  1,
  0,
  1,
  1,
  0,
  1,
  1,
  0,
  1,
  4096,
  256,
  "points",
  4096,
]
`;

exports[`createClusterQuery should create a unclustered Query 1`] = `
Object {
  "sql": "
WITH filtered AS
    (SELECT public.stations.wkb_geometry , a
    FROM public.stations
    WHERE ST_Intersects(TileBBox($1, $2, $3, 3857), ST_Transform(wkb_geometry, 3857))
      
    ),
    q as
    (SELECT 1 as c1,
            ST_AsMVTGeom(ST_Transform(wkb_geometry, 3857), TileBBox($4, $5, $6, 3857), $7, $8, false) AS geom,
            jsonb_build_object('count', 1, 'expansionZoom', 10,'lng', ST_X (ST_Transform(center, 4326)),'lat', ST_Y (ST_Transform(center, 4326)), 'a', a) AS attributes
     FROM filtered)
SELECT ST_AsMVT(q, $9, $10, 'geom') as mvt
from q
",
  "type": "SLONIK_TOKEN_SQL",
  "values": Array [
    15,
    0,
    1,
    15,
    0,
    1,
    4096,
    256,
    "points",
    4096,
  ],
}
`;
